apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "org.tensorflow.lite.blind.detection"
        minSdk 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    flavorDimensions "tfliteInference"
    productFlavors {
       // The TFLite inference is built using the TFLite Java interpreter.
       interpreter {
           dimension "tfliteInference"
       }
       // Default: The TFLite inference is built using the TFLite Task library (high-level API).
       taskApi {
           getIsDefault().set(true)
           dimension "tfliteInference"
       }
    }
    repositories {
        jcenter()
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'x86_64'
            universalApk true
        }
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
apply from:'download_model.gradle'

dependencies {
    implementation 'com.quickbirdstudios:opencv:4.1.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0-rc2'
   implementation 'org.tensorflow:tensorflow-lite-gpu:2.2.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.0'
   implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-task-text:0.1.0'

    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.gms:play-services-vision-common:19.1.3'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.material:material:1.6.0'
   // implementation 'androidx.camera:camera-view:1.2.0-alpha01'
    annotationProcessor 'androidx.room:room-compiler:2.4.2'
    interpreterImplementation project(":lib_interpreter")
    taskApiImplementation project(":lib_task_api")
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
     implementation 'net.objecthunter:exp4j:0.4.4'
    implementation "com.airbnb.android:lottie:4.0.0"
     implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.r0adkll:slidableactivity:2.1.0'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    // Build off of nightly TensorFlow Lite
  //  implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
   // implementation 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly'
   // implementation 'org.tensorflow:tensorflow-lite-support:0.0.0-nightly'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'com.google.mlkit:face-detection:16.1.5'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.navigation:navigation-ui:2.4.2'
    implementation 'com.google.code.gson:gson:2.8.6'
    def lottieVersion = "3.4.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.0.0-rc01"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha20"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha20"

  //  implementation('org.tensorflow:tensorflow-lite:2.7.0') { changing = true }
   // implementation('org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly') { changing = true }
   // implementation('org.tensorflow:tensorflow-lite-support:0.0.0-nightly') { changing = true }

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //implementation project(':openCVLib')
}
